!function(){angular.module("ionic-modal-select",[]).directive("compile",["$compile",function(e){return function(t,o,n){var a=t.$watch(function(e){return e.$eval(n.compile)},function(i){o.html(i),e(o.contents())(t),"true"===n.compileOnce&&a()})}}]).directive("modalSelect",["$ionicModal","$timeout","$filter","$parse",function(e,t,o,n){return{restrict:"A",require:"ngModel",scope:{initialOptions:"=options",optionGetter:"&",onSelect:"&",onReset:"&"},link:function(a,i,l,r,s){function c(){"true"===l.useCollectionRepeat?u=!1:"false"===l.useCollectionRepeat?u=!0:"undefined"!=typeof a.options&&(u=!!(a.options.length<h)),a.ui.shortList=u}var u=!0,h=l.shortListBreak?parseInt(l.shortListBreak):10,p=l.optionProperty,d=l.optionGetter,m="false"!==l.clearSearchOnSelect,f=!!l.multiple;f&&(a.checkedItems=[]),a.ui={modalTitle:l.modalTitle||"Select an option",okButton:l.okButton||"OK",hideReset:"true"===l.hideReset,resetButton:l.resetButton||"Reset",cancelButton:l.cancelButton||"Cancel",loadListMessage:l.loadListMessage||"Loading",modalClass:l.modalClass||"",headerFooterClass:l.headerFooterClass||"bar-stable",value:null,selectedClass:l.selectedClass||"option-selected",hasSearch:"true"===l.hasSearch,searchValue:"",searchPlaceholder:l.searchPlaceholder||"Search",subHeaderClass:l.subHeaderClass||"bar-stable",cancelSearchButton:l.cancelSearchButton||"Clear"};var v=[];if(a.options=[],l.optionsExpression){var S=l.optionsExpression,w=S.match(/^\s*([\s\S]+?)\s+in\s+([\s\S]+?)(?:\s+track\s+by\s+([\s\S]+?))?\s*$/);if(!w)throw new Error("collection-repeat expected expression in form of '_item_ in _collection_[ track by _id_]' but got '"+l.optionsExpression+"'.");var $=(w[1],w[2]),g=n($),V=i.scope();a.$watch(function(){return g(V)},function(e,t){v=angular.copy(e),a.options=angular.copy(e),c()},!0)}else a.$watch("initialOptions",function(e){v=angular.copy(e),a.options=angular.copy(e),c()});var y=i[0].querySelector(".option");if(!y)throw new Error({name:"modalSelectError:noOptionTemplate",message:'When using modalSelect directive you must include an element with class "option" to provide a template for your select options.',toString:function(){return this.name+" "+this.message}});a.inner=angular.element(y).html(),"remove"in Element.prototype||(Element.prototype.remove=function(){this.parentNode.removeChild(this)}),angular.element(y).remove(),r.$render=function(){a.ui.value=r.$viewValue};var C=a.getSelectedValue=function(e){if(null===e||void 0===e)return e;if(d){var t=a.optionGetter({option:e});return t}return p?val=e[p]:val=e,val};a.setOption=function(e){var t=r.$viewValue,o=C(e);r.$setViewValue(o),r.$render(),a.onSelect&&a.onSelect({newValue:o,oldValue:t}),a.modal.hide().then(function(){a.showList=!1,a.ui.hasSearch&&m&&(a.ui.searchValue="")})},a.unsetValue=function(){t(function(){r.$setViewValue(""),r.$render(),a.modal.hide(),a.showList=!1,a.onReset&&angular.isFunction(a.onReset)&&a.onReset()})},a.closeModal=function(){a.modal.hide().then(function(){a.showList=!1})},a.compareValues=function(e,t){return angular.equals(e,t)};var L=f?"modal-template-multiple.html":"modal-template.html";a.modal=e.fromTemplate(modalSelectTemplates[L],{scope:a}),a.$on("$destroy",function(){a.modal.remove()}),i.on("click",function(){u?(a.showList=!0,a.modal.show()):a.modal.show().then(function(){a.showList=!0,a.ui.shortList=u})}),a.ui.hasSearch&&(a.$watch("ui.searchValue",function(e){a.options=o("filter")(v,e)}),a.clearSearch=function(){a.ui.searchValue=""}),r.$render()}}}])}();