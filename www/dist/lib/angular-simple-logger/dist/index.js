var angular=require("angular");angular.module("nemLogging",[]),angular.module("nemLogging").provider("nemDebug",function(){var n=null;return n=require("debug"),this.$get=function(){return n},this.debug=n,this});var bind=function(n,r){return function(){return n.apply(r,arguments)}},slice=[].slice;angular.module("nemLogging").provider("nemSimpleLogger",["nemDebugProvider",function(n){var r,e,t,i,o,u,g,l,s,f,a,h;for(a=n.debug,t={},i=["debug","info","warn","error","log"],r={},s=l=0,f=i.length;l<f;s=++l)h=i[s],r[h]=s;return u=function(n,r,e){if(n>=r)return e()},o=function(n){var r,e,t;if(r=!1,!n)return r;for(e=0,t=i.length;e<t&&(h=i[e],r=null!=n[h]&&"function"==typeof n[h],r);e++);return r},g=function(n,r){var e,o,u,g;for(null==t[n]&&(t[n]=a(n)),e=t[n],g={},o=0,u=i.length;o<u;o++)h=i[o],g[h]="debug"===h?e:r[h];return g},e=function(){function n(n){var e,t,g,l,s;if(this.$log=n,this.spawn=bind(this.spawn,this),!this.$log)throw"internalLogger undefined";if(!o(this.$log))throw"@$log is invalid";for(this.doLog=!0,s={},e=function(n){return function(e){return s[e]=function(){var t;if(t=1<=arguments.length?slice.call(arguments,0):[],n.doLog)return u(r[e],n.currentLevel,function(){var r;return(r=n.$log)[e].apply(r,t)})},n[e]=s[e]}}(this),t=0,g=i.length;t<g;t++)l=i[t],e(l);this.LEVELS=r,this.currentLevel=r.error}return n.prototype.spawn=function(r){if("string"==typeof r){if(!o(this.$log))throw"@$log is invalid";if(!a)throw"nemDebug is undefined this is probably the light version of this library sep debug logggers is not supported!";return g(r,this.$log)}return new n(r||this.$log)},n}(),this.decorator=["$log",function(n){var t;return t=new e(n),t.currentLevel=r.debug,t}],this.$get=["$log",function(n){return new e(n)}],this}]);