!function(n,r){r.module("nemLogging",[]),r.module("nemLogging").provider("nemDebug",function(){var n=null;return this.$get=function(){return n},this.debug=n,this});var t=function(n,r){return function(){return n.apply(r,arguments)}},e=[].slice;r.module("nemLogging").provider("nemSimpleLogger",["nemDebugProvider",function(n){var r,i,o,u,g,l,f,s,h,c,a,d;for(a=n.debug,o={},u=["debug","info","warn","error","log"],r={},h=s=0,c=u.length;s<c;h=++s)d=u[h],r[d]=h;return l=function(n,r,t){if(n>=r)return t()},g=function(n){var r,t,e;if(r=!1,!n)return r;for(t=0,e=u.length;t<e&&(d=u[t],r=null!=n[d]&&"function"==typeof n[d],r);t++);return r},f=function(n,r){var t,e,i,g;for(null==o[n]&&(o[n]=a(n)),t=o[n],g={},e=0,i=u.length;e<i;e++)d=u[e],g[d]="debug"===d?t:r[d];return g},i=function(){function n(n){var i,o,f,s,h;if(this.$log=n,this.spawn=t(this.spawn,this),!this.$log)throw"internalLogger undefined";if(!g(this.$log))throw"@$log is invalid";for(this.doLog=!0,h={},i=function(n){return function(t){return h[t]=function(){var i;if(i=1<=arguments.length?e.call(arguments,0):[],n.doLog)return l(r[t],n.currentLevel,function(){var r;return(r=n.$log)[t].apply(r,i)})},n[t]=h[t]}}(this),o=0,f=u.length;o<f;o++)s=u[o],i(s);this.LEVELS=r,this.currentLevel=r.error}return n.prototype.spawn=function(r){if("string"==typeof r){if(!g(this.$log))throw"@$log is invalid";if(!a)throw"nemDebug is undefined this is probably the light version of this library sep debug logggers is not supported!";return f(r,this.$log)}return new n(r||this.$log)},n}(),this.decorator=["$log",function(n){var t;return t=new i(n),t.currentLevel=r.debug,t}],this.$get=["$log",function(n){return new i(n)}],this}])}(window,angular);